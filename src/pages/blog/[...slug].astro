---
import { getCollection } from "astro:content";
import Layout from '../../layouts/Layout.astro';
import { slugify } from '../../utils/slugify';
import '../../styles/digipom.css';
import { format } from 'date-fns';

const latestPosts = await getCollection("news");

export async function getStaticPaths() {
    const newsEntries = await getCollection('news');

    return newsEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
};

const { entry } = Astro.props;
const { Content } = await entry.render();

---

<Layout title={entry.data.title}>
	<section class="px-4 py-3 lg:px-0 mb-14 lg:max-w-[1110px] lg:mx-auto md:flex md:items-center md:justify-start">
		<div class="dark:text-darkmodetext w-full md:w-[730px] float-right">
            <h1 class="text-5xl leading-normal tracking-tight font-bold mb-12">{entry.data.title}</h1>
            <div class="mb-16">{format(new Date(entry.data.publishedDate), 'MMMM d, yyyy')}</div>
			{entry.data.image && (<img src={entry.data.image} class="h-[300px] mb-12" />)}
				<article class="
					prose prose-lg prose-code:text-dpdarkblue prose-blockquote:text-dpgray prose-blockquote:border-s-dpgreen
					dark:prose-invert dark:prose-code:text-darkmodedpgreen dark:prose-blockquote:text-dpneutral-200 dark:prose-blockquote:border-s-darkmodedpgreen">
            		<Content />
            	</article>
            <div class="mt-12 mb-12">Tags: 
            	{
            		entry.data.tags.map(tag => (
		        		 <a class="text-dpgreen dark:text-darkmodedpgreen" href={`/tags/${slugify(tag)}`}>#{tag} </a>
	            	))
	            }
			</div>
            <div class="flex items-center gap-2 mb-12 md:mb-0">Share: <a href="/rss.xml"><img src="/images/Rss.png" /></a> <a href="https://twitter.com/Digipom"><img src="/images/Twitter.png" /></a></div>
		</div>
	</section>

    <section class="px-4 py-3 lg:px-0 mb-8 md:text-twentytwo lg:max-w-[1110px] lg:mx-auto">
		<a href="/news" class="font-extrabold text-thirtyfour text-dpdarkblue tracking-tight dark:text-darkmodetext">Latest articles</a>
		<div class="md:flex md:justify-between mt-4 md:mt-8">
			{
				latestPosts.sort((a, b) => new Date(b.data.publishedDate).valueOf() - new Date(a.data.publishedDate).valueOf()).slice(0,4).map((post) => (
                    <div class="md:max-w-[240px] grid grid-flow-row auto-rows-max content-between mb-10">
						<a href={`/news/${post.slug}`} class="font-bold text-twentytwo leading-8 text-dpdarkblue mb-2 dark:text-darkmodetext">
							{post.data.title}
						</a>
						<p class="text-dpdarkblue text-base text-opacity-60 mb-4 line-clamp-3 dark:text-darkmodetext">
							{post.data.description}
						</p>
						<a href={`/news/${post.slug}`} class="transition flex items-center justify-center gap-3 border-2 border-dpgreen rounded hover:bg-dpgreen w-40 py-4 font-semibold text-sm text-dpgreen hover:text-white mb-4 dark:text-darkmodedpgreen dark:border-darkmodedpgreen dark:hover:bg-darkmodedpgreen">
							Read more
							<svg width="8" height="15" viewBox="0 0 8 15" fill="none" xmlns="http://www.w3.org/2000/svg">
								<path d="M1 13.7552L7 7.75525L1 1.75525" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
							</svg>
						</a>
					</div>					
                ))
			}
		</div>
	</section>
</Layout>